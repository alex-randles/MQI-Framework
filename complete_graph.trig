@prefix ns1: <http://www.w3.org/ns/r2rml#> .
@prefix ns10: <http://purl.org/vocab/vann/> .
@prefix ns11: <http://purl.org/dc/terms/> .
@prefix ns2: <https://w3id.org/OSCD#> .
@prefix ns3: <http://linkedevents.org/ontology/> .
@prefix ns4: <http://semweb.mmlab.be/ns/rml#> .
@prefix ns5: <http://kdeg.scss.tcd.ie/ns/rrf#> .
@prefix ns6: <http://purl.org/linked-data/cube#> .
@prefix ns7: <http://www.w3.org/2002/07/owl#> .
@prefix ns8: <http://xmlns.com/foaf/0.1/> .
@prefix ns9: <http://purl.org/dc/elements/1.1/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<sample_mapping.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/sample_mapping.ttl#Less-Expensive-Query> ns1:sqlQuery """
            SELECT DISTINCT ID
            FROM VALIDATION_BATCH2
        """ ;
        ns1:sqlVersion ns1:Oracle .

    <file:///home/alex/MQI-Framework/static/uploads/sample_mapping.ttl#Metric-Instance> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/sample_mapping.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "http://data.example.com/metric/{METRIC}" ] ;
                ns1:predicate rdf:type ],
            [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/observation/{METRIC}-{VALIDATION_BATCH_ID}" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#Observations> ] ;
        ns1:subjectMap [ ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/metric/{METRIC}-instance" ] .

    <file:///home/alex/MQI-Framework/static/uploads/sample_mapping.ttl#Observation-View> ns1:sqlQuery """
		SELECT DISTINCT MAPPING2.CATEGORY, MAPPING2.DIMENSION as DIMENSION,
		    VALIDATION_FEATURE2.VALIDATION_BATCH_ID,
		    VALIDATION_FEATURE2.CLASS,
		    SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1) as METRIC,
		    COUNT(SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1)) as NUM_INSTANCES,
		    VALIDATION_BATCH2.END_DATE as ASSESSMENT_DATE,
		    VALIDATION_FEATURE2.CLASS as COMPUTED_ON,
		    CASE
		        WHEN VALIDATION_FEATURE2.CLASS = 'ARTIFICIAL' THEN VALIDATION_BATCH2.ARTIFICIAL_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BLP' THEN VALIDATION_BATCH2.BLP_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_AREA' THEN VALIDATION_BATCH2.BOUNDARY_AREA_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_LINE' THEN VALIDATION_BATCH2.BOUNDARY_LINE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_MEREING' THEN VALIDATION_BATCH2.BOUNDARY_MEREING_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_POINT' THEN VALIDATION_BATCH2.BOUNDARY_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_SSA' THEN VALIDATION_BATCH2.BOUNDARY_SSA_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING' THEN VALIDATION_BATCH2.BUILDING_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING_GROUP' THEN VALIDATION_BATCH2.BUILDING_GROUP_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING_UNIT' THEN VALIDATION_BATCH2.BUILDING_UNIT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'DIVISION' THEN VALIDATION_BATCH2.DIVISION_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'EXPOSED' THEN VALIDATION_BATCH2.EXPOSED_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'LOCALE' THEN VALIDATION_BATCH2.LOCALE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'RAIL_NETWORK_SEGMENT' THEN VALIDATION_BATCH2.RAIL_NETWORK_SEGMENT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'RAIL_POINT' THEN VALIDATION_BATCH2.RAIL_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SERVICE_LINE' THEN VALIDATION_BATCH2.SERVICE_LINE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SITE' THEN VALIDATION_BATCH2.SITE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SITE_POINT' THEN VALIDATION_BATCH2.SITE_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'STRUCTURE' THEN VALIDATION_BATCH2.STRUCTURE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'VEGETATION' THEN VALIDATION_BATCH2.VEGETATION_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER' THEN VALIDATION_BATCH2.WATER_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER_POINT' THEN VALIDATION_BATCH2.WATER_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER_SINGLE_STREAM' THEN VALIDATION_BATCH2.WATER_SINGLE_STREAM_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY' THEN VALIDATION_BATCH2.WAY_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY_GDF2' THEN VALIDATION_BATCH2.WAY_GDF2_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY_POINT' THEN VALIDATION_BATCH2.WAY_POINT_COUNT
		    END TOTAL_INSTANCES
		    from VALIDATION_FEATURE2
		    inner join MAPPING2 on SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1) = MAPPING2.METRIC
			INNER JOIN VALIDATION_BATCH2
			ON VALIDATION_FEATURE2.VALIDATION_BATCH_ID = VALIDATION_BATCH2.ID
			GROUP BY MAPPING2.CATEGORY,MAPPING2.DIMENSION, VALIDATION_BATCH_ID, VALIDATION_FEATURE2.CLASS, SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1), VALIDATION_BATCH2.END_DATE,
			VALIDATION_BATCH2.RULE_SET, VALIDATION_BATCH2.ARTIFICIAL_COUNT, VALIDATION_BATCH2.BLP_COUNT,
			VALIDATION_BATCH2.BOUNDARY_AREA_COUNT, VALIDATION_BATCH2.BOUNDARY_LINE_COUNT, VALIDATION_BATCH2.BOUNDARY_MEREING_COUNT,
			VALIDATION_BATCH2.BOUNDARY_POINT_COUNT, VALIDATION_BATCH2.BOUNDARY_SSA_COUNT, VALIDATION_BATCH2.BUILDING_COUNT,
			VALIDATION_BATCH2.BUILDING_GROUP_COUNT, VALIDATION_BATCH2.BUILDING_UNIT_COUNT, VALIDATION_BATCH2.DIVISION_COUNT,
			VALIDATION_BATCH2.EXPOSED_COUNT, VALIDATION_BATCH2.LOCALE_COUNT, VALIDATION_BATCH2.RAIL_NETWORK_SEGMENT_COUNT,
			VALIDATION_BATCH2.RAIL_POINT_COUNT, VALIDATION_BATCH2.SERVICE_LINE_COUNT, VALIDATION_BATCH2.SITE_COUNT,
			VALIDATION_BATCH2.SITE_POINT_COUNT, VALIDATION_BATCH2.STRUCTURE_COUNT, VALIDATION_BATCH2.VEGETATION_COUNT,
			VALIDATION_BATCH2.WATER_COUNT, VALIDATION_BATCH2.WATER_POINT_COUNT, VALIDATION_BATCH2.WATER_SINGLE_STREAM_COUNT,
			VALIDATION_BATCH2.WAY_COUNT, VALIDATION_BATCH2.WAY_GDF2_COUNT, VALIDATION_BATCH2.WAY_POINT_COUNT
	""" ;
        ns1:sqlVersion ns1:Oracle .
}

<1.trig> {
    <http://www.example.com/changeLog/user-1> a ns2:ChangeLog ;
        ns2:hasChange <http://www.example.com/deleteChange/24>,
            <http://www.example.com/deleteChange/25>,
            <http://www.example.com/deleteChange/32>,
            <http://www.example.com/deleteChange/33>,
            <http://www.example.com/insertChange/0>,
            <http://www.example.com/insertChange/1>,
            <http://www.example.com/insertChange/10>,
            <http://www.example.com/insertChange/11>,
            <http://www.example.com/insertChange/12>,
            <http://www.example.com/insertChange/13>,
            <http://www.example.com/insertChange/14>,
            <http://www.example.com/insertChange/15>,
            <http://www.example.com/insertChange/16>,
            <http://www.example.com/insertChange/17>,
            <http://www.example.com/insertChange/18>,
            <http://www.example.com/insertChange/19>,
            <http://www.example.com/insertChange/2>,
            <http://www.example.com/insertChange/20>,
            <http://www.example.com/insertChange/21>,
            <http://www.example.com/insertChange/22>,
            <http://www.example.com/insertChange/23>,
            <http://www.example.com/insertChange/26>,
            <http://www.example.com/insertChange/27>,
            <http://www.example.com/insertChange/28>,
            <http://www.example.com/insertChange/29>,
            <http://www.example.com/insertChange/3>,
            <http://www.example.com/insertChange/30>,
            <http://www.example.com/insertChange/31>,
            <http://www.example.com/insertChange/4>,
            <http://www.example.com/insertChange/5>,
            <http://www.example.com/insertChange/6>,
            <http://www.example.com/insertChange/7>,
            <http://www.example.com/insertChange/8>,
            <http://www.example.com/insertChange/9> ;
        ns2:hasCurrentVersion <https://raw.githubusercontent.com/alex-randles/Change-Detection-System-Examples/main/manipulated_file/employee.csv> ;
        ns2:hasPreviousVersion <https://raw.githubusercontent.com/kg-construct/rml-test-cases/master/test-cases/RMLTC0002a-CSV/employee.csv> .

    <http://www.example.com/changedData/0> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/1> a ns2:ChangedData ;
        rdfs:comment "Williams" .

    <http://www.example.com/changedData/10> a ns2:ChangedData ;
        rdfs:comment "ddd" .

    <http://www.example.com/changedData/11> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/12> a ns2:ChangedData ;
        rdfs:comment "Michael" .

    <http://www.example.com/changedData/13> a ns2:ChangedData ;
        rdfs:comment "Jordan" .

    <http://www.example.com/changedData/14> a ns2:ChangedData ;
        rdfs:comment "Basketball" .

    <http://www.example.com/changedData/15> a ns2:ChangedData ;
        rdfs:comment "Brooklyn" .

    <http://www.example.com/changedData/16> a ns2:ChangedData ;
        rdfs:comment "xxx" .

    <http://www.example.com/changedData/17> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/18> a ns2:ChangedData ;
        rdfs:comment "Tom" .

    <http://www.example.com/changedData/19> a ns2:ChangedData ;
        rdfs:comment "Brady" .

    <http://www.example.com/changedData/2> a ns2:ChangedData ;
        rdfs:comment "Tennis" .

    <http://www.example.com/changedData/20> a ns2:ChangedData ;
        rdfs:comment "Football" .

    <http://www.example.com/changedData/21> a ns2:ChangedData ;
        rdfs:comment "San Mateo" .

    <http://www.example.com/changedData/22> a ns2:ChangedData ;
        rdfs:comment "fff" .

    <http://www.example.com/changedData/23> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/24> a ns2:ChangedData ;
        rdfs:comment "10" .

    <http://www.example.com/changedData/25> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/26> a ns2:ChangedData ;
        rdfs:comment "Sport" .

    <http://www.example.com/changedData/27> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/28> a ns2:ChangedData ;
        rdfs:comment "Test" .

    <http://www.example.com/changedData/29> a ns2:ChangedData ;
        rdfs:comment "City" .

    <http://www.example.com/changedData/3> a ns2:ChangedData ;
        rdfs:comment "California" .

    <http://www.example.com/changedData/30> a ns2:ChangedData ;
        rdfs:comment "LastName" .

    <http://www.example.com/changedData/31> a ns2:ChangedData ;
        rdfs:comment "FirstName" .

    <http://www.example.com/changedData/32> a ns2:ChangedData ;
        rdfs:comment "ID" .

    <http://www.example.com/changedData/33> a ns2:ChangedData ;
        rdfs:comment "Name" .

    <http://www.example.com/changedData/4> a ns2:ChangedData ;
        rdfs:comment "Tests" .

    <http://www.example.com/changedData/5> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/6> a ns2:ChangedData ;
        rdfs:comment "Cristiano" .

    <http://www.example.com/changedData/7> a ns2:ChangedData ;
        rdfs:comment "Ronaldo" .

    <http://www.example.com/changedData/8> a ns2:ChangedData ;
        rdfs:comment "Soccer" .

    <http://www.example.com/changedData/9> a ns2:ChangedData ;
        rdfs:comment "Funchal" .

    <http://www.example.com/deleteChange/24> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/24> ;
        ns2:hasDataReference "ID" .

    <http://www.example.com/deleteChange/25> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/25> ;
        ns2:hasDataReference "Name" .

    <http://www.example.com/deleteChange/32> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/32> .

    <http://www.example.com/deleteChange/33> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/33> .

    <http://www.example.com/insertChange/0> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/0> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/1> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/1> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/10> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/10> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/11> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/11> ;
        ns2:hasDataReference "ENAME" .

    <http://www.example.com/insertChange/12> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/12> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/13> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/13> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/14> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/14> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/15> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/15> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/16> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/16> ;
        ns2:hasDataReference "ENAME" .

    <http://www.example.com/insertChange/17> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/17> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/18> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/18> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/19> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/19> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/2> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/2> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/20> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/20> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/21> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/21> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/22> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/22> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/23> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/23> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/26> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/26> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/27> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/27> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/28> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/28> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/29> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/29> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/3> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/3> ;
        ns2:hasDataReference "ENAME" .

    <http://www.example.com/insertChange/30> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/30> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/31> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/31> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/4> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/4> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/5> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/5> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/6> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/6> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/7> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/7> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/8> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/8> ;
        ns2:hasDataReference "EMPNO" .

    <http://www.example.com/insertChange/9> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-03 23:06:45.220929"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/9> ;
        ns2:hasDataReference "City" .
}

<test_mapping.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/test_mapping.ttl#TriplesMap8> ns4:logicalSource [ ns4:source "student.csv" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ;
                        ns1:datatype xsd:sss ] ;
                ns1:predicate <http://www.w3.org/ns/prov#generatedAtTime> ] ;
        ns1:subjectMap [ ns1:class <https://www.w3id.org/MQIO/#MappingDocument> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .
}

<mappingDAQobservation_2nd_Dump.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Category-Instance> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/dimension/{DIMENSION}-instance" ] ;
                ns1:predicateMap [ ns1:template "http://data.example.com/dimension/has{DIMENSION}Dimension" ] ] ;
        ns1:subjectMap [ ns1:class <http://data.example.com/category/Oracle> ;
                ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/category/{CATEGORY}-instance" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Dimension-Instance> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "http://data.example.com/dimension/{DIMENSION}" ] ;
                ns1:predicate rdf:type ],
            [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/metric/{METRIC}-instance" ] ;
                ns1:predicateMap [ ns1:template "http://data.example.com/dimension/has{METRIC}metric" ] ] ;
        ns1:subjectMap [ ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/dimension/{DIMENSION}-instance" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Graph-Instance> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Less-Expensive-Query> ;
        ns1:predicateObjectMap [ ns1:object <http://purl.org/eis/vocab/daq#dsd> ;
                ns1:predicate ns6:structure ] ;
        ns1:subjectMap [ ns1:class <http://purl.org/eis/vocab/daq#QualityGraph> ;
                ns1:constant <http://data.example.com/1spatialassessment/quality-graph/> ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Metric-Instance> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "http://data.example.com/metric/{METRIC}" ] ;
                ns1:predicate rdf:type ],
            [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/observation/{METRIC}-{VALIDATION_BATCH_ID}" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#Observation> ] ;
        ns1:subjectMap [ ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/metric/{METRIC}-instance" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observations> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:constant false ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#isEstimate> ],
            [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/metric/{METRIC}-instance" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#metric> ],
            [ ns1:objectMap [ ns5:functionCall [ ns5:function <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#CalculateValue> ;
                                ns5:parameterBindings ( [ ns1:column "NUM_INSTANCES" ] [ ns1:column "TOTAL_INSTANCES" ] ) ] ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#value> ],
            [ ns1:objectMap [ ns1:template "{ASSESSMENT_DATE}" ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate <http://purl.org/linked-data/sdmx/2009/dimension#timePeriod> ],
            [ ns1:object <http://data.example.com/1spatialassessment/quality-graph/> ;
                ns1:predicate ns6:dataSet ],
            [ ns1:objectMap [ ns1:template "http://ontologies.adaptcentre.ie/dataset-hierarchy#{COMPUTED_ON}" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#computedOn> ],
            [ ns1:objectMap [ ns1:template "http://ontologies.adaptcentre.ie/dataset-hierarchy#{COMPUTED_ON}" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#computedOn> ],
            [ ns1:object <http://data.example.com/1spatialassessment/r2rmlconverter/> ;
                ns1:predicate <http://www.w3.org/ns/prov#wasGeneratedBy> ],
            [ ns1:objectMap [ ns1:template "http://data.example.com/1spatialassessment/observation/{METRIC}-{VALIDATION_BATCH_ID}-profiling" ] ;
                ns1:predicate <http://www.w3.org/ns/prov#generated> ] ;
        ns1:subjectMap [ ns1:class <http://purl.org/eis/vocab/daq#Observation> ;
                ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/observation/{METRIC}-{VALIDATION_BATCH_ID}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Profiling> ns1:logicalTable <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "TOTAL_INSTANCES" ] ;
                ns1:predicate <http://purl.org/eis/vocab/daq#totalDatasetTriplesAssessed> ] ;
        ns1:subjectMap [ ns1:class <http://purl.org/eis/vocab/daq#MetricProfile> ;
                ns1:graph <http://data.example.com/1spatialassessment/quality-graph> ;
                ns1:template "http://data.example.com/1spatialassessment/observation/{METRIC}-{VALIDATION_BATCH_ID}-profiling" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#CalculateValue> ns5:functionBody """
		function calculateValue(numInstances, totalInstances) {
	    	return 1 - (numInstances / totalInstances);
    	} """ ;
        ns5:functionName "calculateValue" .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Less-Expensive-Query> ns1:sqlQuery """
            SELECT DISTINCT ID
            FROM VALIDATION_BATCH2
        """ ;
        ns1:sqlVersion ns1:Oracle .

    <file:///home/alex/MQI-Framework/static/uploads/mappingDAQobservation_2nd_Dump.ttl#Observation-View> ns1:sqlQuery """
		SELECT DISTINCT MAPPING2.CATEGORY, MAPPING2.DIMENSION as DIMENSION,
		    VALIDATION_FEATURE2.VALIDATION_BATCH_ID,
		    VALIDATION_FEATURE2.CLASS,
		    SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1) as METRIC,
		    COUNT(SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1)) as NUM_INSTANCES,
		    VALIDATION_BATCH2.END_DATE as ASSESSMENT_DATE,
		    VALIDATION_FEATURE2.CLASS as COMPUTED_ON,
		    CASE
		        WHEN VALIDATION_FEATURE2.CLASS = 'ARTIFICIAL' THEN VALIDATION_BATCH2.ARTIFICIAL_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BLP' THEN VALIDATION_BATCH2.BLP_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_AREA' THEN VALIDATION_BATCH2.BOUNDARY_AREA_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_LINE' THEN VALIDATION_BATCH2.BOUNDARY_LINE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_MEREING' THEN VALIDATION_BATCH2.BOUNDARY_MEREING_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_POINT' THEN VALIDATION_BATCH2.BOUNDARY_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BOUNDARY_SSA' THEN VALIDATION_BATCH2.BOUNDARY_SSA_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING' THEN VALIDATION_BATCH2.BUILDING_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING_GROUP' THEN VALIDATION_BATCH2.BUILDING_GROUP_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'BUILDING_UNIT' THEN VALIDATION_BATCH2.BUILDING_UNIT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'DIVISION' THEN VALIDATION_BATCH2.DIVISION_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'EXPOSED' THEN VALIDATION_BATCH2.EXPOSED_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'LOCALE' THEN VALIDATION_BATCH2.LOCALE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'RAIL_NETWORK_SEGMENT' THEN VALIDATION_BATCH2.RAIL_NETWORK_SEGMENT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'RAIL_POINT' THEN VALIDATION_BATCH2.RAIL_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SERVICE_LINE' THEN VALIDATION_BATCH2.SERVICE_LINE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SITE' THEN VALIDATION_BATCH2.SITE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'SITE_POINT' THEN VALIDATION_BATCH2.SITE_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'STRUCTURE' THEN VALIDATION_BATCH2.STRUCTURE_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'VEGETATION' THEN VALIDATION_BATCH2.VEGETATION_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER' THEN VALIDATION_BATCH2.WATER_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER_POINT' THEN VALIDATION_BATCH2.WATER_POINT_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WATER_SINGLE_STREAM' THEN VALIDATION_BATCH2.WATER_SINGLE_STREAM_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY' THEN VALIDATION_BATCH2.WAY_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY_GDF2' THEN VALIDATION_BATCH2.WAY_GDF2_COUNT
		        WHEN VALIDATION_FEATURE2.CLASS = 'WAY_POINT' THEN VALIDATION_BATCH2.WAY_POINT_COUNT
		    END TOTAL_INSTANCES
		    from VALIDATION_FEATURE2
		    inner join MAPPING2 on SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1) = MAPPING2.METRIC
			INNER JOIN VALIDATION_BATCH2
			ON VALIDATION_FEATURE2.VALIDATION_BATCH_ID = VALIDATION_BATCH2.ID
			GROUP BY MAPPING2.CATEGORY,MAPPING2.DIMENSION, VALIDATION_BATCH_ID, VALIDATION_FEATURE2.CLASS, SUBSTR(VALIDATION_RULE, 0, INSTR(validation_rule, ' ') - 1), VALIDATION_BATCH2.END_DATE,
			VALIDATION_BATCH2.RULE_SET, VALIDATION_BATCH2.ARTIFICIAL_COUNT, VALIDATION_BATCH2.BLP_COUNT,
			VALIDATION_BATCH2.BOUNDARY_AREA_COUNT, VALIDATION_BATCH2.BOUNDARY_LINE_COUNT, VALIDATION_BATCH2.BOUNDARY_MEREING_COUNT,
			VALIDATION_BATCH2.BOUNDARY_POINT_COUNT, VALIDATION_BATCH2.BOUNDARY_SSA_COUNT, VALIDATION_BATCH2.BUILDING_COUNT,
			VALIDATION_BATCH2.BUILDING_GROUP_COUNT, VALIDATION_BATCH2.BUILDING_UNIT_COUNT, VALIDATION_BATCH2.DIVISION_COUNT,
			VALIDATION_BATCH2.EXPOSED_COUNT, VALIDATION_BATCH2.LOCALE_COUNT, VALIDATION_BATCH2.RAIL_NETWORK_SEGMENT_COUNT,
			VALIDATION_BATCH2.RAIL_POINT_COUNT, VALIDATION_BATCH2.SERVICE_LINE_COUNT, VALIDATION_BATCH2.SITE_COUNT,
			VALIDATION_BATCH2.SITE_POINT_COUNT, VALIDATION_BATCH2.STRUCTURE_COUNT, VALIDATION_BATCH2.VEGETATION_COUNT,
			VALIDATION_BATCH2.WATER_COUNT, VALIDATION_BATCH2.WATER_POINT_COUNT, VALIDATION_BATCH2.WATER_SINGLE_STREAM_COUNT,
			VALIDATION_BATCH2.WAY_COUNT, VALIDATION_BATCH2.WAY_GDF2_COUNT, VALIDATION_BATCH2.WAY_POINT_COUNT
	""" ;
        ns1:sqlVersion ns1:Oracle .
}

<sdmx-dimension.ttl> {
    <http://purl.org/linked-data/sdmx/2009/dimension#age> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Age"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#age> ;
        rdfs:comment "The length of time that a person has lived or a thing has existed."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#civilStatus> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Civil Status"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#civilStatus> ;
        rdfs:comment "Legal, conjugal status of each individual in relation to the marriage laws or customs of the country."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#currency> a ns6:CodedProperty,
            ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Currency"@en ;
        ns6:codeList <http://purl.org/linked-data/sdmx/2009/code#currency> ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#currency> ;
        rdfs:comment "Monetary denomination of the object being measured."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range <http://purl.org/linked-data/sdmx/2009/code#Currency>,
            rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#educationLev> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Education Level"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#educationLev> ;
        rdfs:comment "The highest level of an educational programme the person has successfully completed."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#freq> a ns6:CodedProperty,
            ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Frequency"@en ;
        ns6:codeList <http://purl.org/linked-data/sdmx/2009/code#freq> ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#freq> ;
        rdfs:comment "The time interval at which observations occur over a given time period."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range <http://purl.org/linked-data/sdmx/2009/code#Freq>,
            rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#occupation> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Occupation"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#occupation> ;
        rdfs:comment "Job or position held by an individual who performs a set of tasks and duties."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#refArea> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Reference Area"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#refArea> ;
        rdfs:comment "The country or geographic area to which the measured statistical phenomenon relates."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#refPeriod> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Reference Period"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#refPeriod> ;
        rdfs:comment "The period of time or point in time to which the measured observation is intended to refer."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#sex> a ns6:CodedProperty,
            ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Sex"@en ;
        ns6:codeList <http://purl.org/linked-data/sdmx/2009/code#sex> ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#sex> ;
        rdfs:comment "The state of being male or female."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range <http://purl.org/linked-data/sdmx/2009/code#Sex>,
            rdfs:Resource .

    <http://purl.org/linked-data/sdmx/2009/dimension#timePeriod> a ns6:DimensionProperty,
            rdf:Property ;
        rdfs:label "Time Period"@en ;
        ns6:concept <http://purl.org/linked-data/sdmx/2009/concept#timePeriod> ;
        rdfs:comment "The period of time or point in time to which the measured observation refers."@en ;
        rdfs:isDefinedBy <https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf> ;
        rdfs:range rdfs:Resource .
}

<3.trig> {
    <http://www.example.com/changeLog/user-1> a ns2:ChangeLog ;
        ns2:hasChange <http://www.example.com/deleteChange/24>,
            <http://www.example.com/deleteChange/25>,
            <http://www.example.com/deleteChange/32>,
            <http://www.example.com/deleteChange/33>,
            <http://www.example.com/insertChange/0>,
            <http://www.example.com/insertChange/1>,
            <http://www.example.com/insertChange/10>,
            <http://www.example.com/insertChange/11>,
            <http://www.example.com/insertChange/12>,
            <http://www.example.com/insertChange/13>,
            <http://www.example.com/insertChange/14>,
            <http://www.example.com/insertChange/15>,
            <http://www.example.com/insertChange/16>,
            <http://www.example.com/insertChange/17>,
            <http://www.example.com/insertChange/18>,
            <http://www.example.com/insertChange/19>,
            <http://www.example.com/insertChange/2>,
            <http://www.example.com/insertChange/20>,
            <http://www.example.com/insertChange/21>,
            <http://www.example.com/insertChange/22>,
            <http://www.example.com/insertChange/23>,
            <http://www.example.com/insertChange/26>,
            <http://www.example.com/insertChange/27>,
            <http://www.example.com/insertChange/28>,
            <http://www.example.com/insertChange/29>,
            <http://www.example.com/insertChange/3>,
            <http://www.example.com/insertChange/30>,
            <http://www.example.com/insertChange/31>,
            <http://www.example.com/insertChange/4>,
            <http://www.example.com/insertChange/5>,
            <http://www.example.com/insertChange/6>,
            <http://www.example.com/insertChange/7>,
            <http://www.example.com/insertChange/8>,
            <http://www.example.com/insertChange/9> ;
        ns2:hasCurrentVersion <https://raw.githubusercontent.com/alex-randles/Change-Detection-System-Examples/main/manipulated_file/employee.csv> ;
        ns2:hasPreviousVersion <https://raw.githubusercontent.com/kg-construct/rml-test-cases/master/test-cases/RMLTC0002a-CSV/student.csv> .

    <http://www.example.com/changedData/0> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/1> a ns2:ChangedData ;
        rdfs:comment "Williams" .

    <http://www.example.com/changedData/10> a ns2:ChangedData ;
        rdfs:comment "ddd" .

    <http://www.example.com/changedData/11> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/12> a ns2:ChangedData ;
        rdfs:comment "Michael" .

    <http://www.example.com/changedData/13> a ns2:ChangedData ;
        rdfs:comment "Jordan" .

    <http://www.example.com/changedData/14> a ns2:ChangedData ;
        rdfs:comment "Basketball" .

    <http://www.example.com/changedData/15> a ns2:ChangedData ;
        rdfs:comment "Brooklyn" .

    <http://www.example.com/changedData/16> a ns2:ChangedData ;
        rdfs:comment "xxx" .

    <http://www.example.com/changedData/17> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/18> a ns2:ChangedData ;
        rdfs:comment "Tom" .

    <http://www.example.com/changedData/19> a ns2:ChangedData ;
        rdfs:comment "Brady" .

    <http://www.example.com/changedData/2> a ns2:ChangedData ;
        rdfs:comment "Tennis" .

    <http://www.example.com/changedData/20> a ns2:ChangedData ;
        rdfs:comment "Football" .

    <http://www.example.com/changedData/21> a ns2:ChangedData ;
        rdfs:comment "San Mateo" .

    <http://www.example.com/changedData/22> a ns2:ChangedData ;
        rdfs:comment "fff" .

    <http://www.example.com/changedData/23> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/24> a ns2:ChangedData ;
        rdfs:comment "10" .

    <http://www.example.com/changedData/25> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/26> a ns2:ChangedData ;
        rdfs:comment "Test" .

    <http://www.example.com/changedData/27> a ns2:ChangedData ;
        rdfs:comment "LastName" .

    <http://www.example.com/changedData/28> a ns2:ChangedData ;
        rdfs:comment "FirstName" .

    <http://www.example.com/changedData/29> a ns2:ChangedData ;
        rdfs:comment "City" .

    <http://www.example.com/changedData/3> a ns2:ChangedData ;
        rdfs:comment "California" .

    <http://www.example.com/changedData/30> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/31> a ns2:ChangedData ;
        rdfs:comment "Sport" .

    <http://www.example.com/changedData/32> a ns2:ChangedData ;
        rdfs:comment "Name" .

    <http://www.example.com/changedData/33> a ns2:ChangedData ;
        rdfs:comment "ID" .

    <http://www.example.com/changedData/4> a ns2:ChangedData ;
        rdfs:comment "Tests" .

    <http://www.example.com/changedData/5> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/6> a ns2:ChangedData ;
        rdfs:comment "Cristiano" .

    <http://www.example.com/changedData/7> a ns2:ChangedData ;
        rdfs:comment "Ronaldo" .

    <http://www.example.com/changedData/8> a ns2:ChangedData ;
        rdfs:comment "Soccer" .

    <http://www.example.com/changedData/9> a ns2:ChangedData ;
        rdfs:comment "Funchal" .

    <http://www.example.com/deleteChange/24> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/24> ;
        ns2:hasDataReference "ID" .

    <http://www.example.com/deleteChange/25> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/25> ;
        ns2:hasDataReference "Name" .

    <http://www.example.com/deleteChange/32> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/32> .

    <http://www.example.com/deleteChange/33> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/33> .

    <http://www.example.com/insertChange/0> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/0> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/1> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/1> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/10> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/10> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/11> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/11> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/12> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/12> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/13> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/13> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/14> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/14> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/15> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/15> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/16> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/16> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/17> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/17> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/18> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/18> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/19> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/19> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/2> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/2> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/20> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/20> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/21> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/21> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/22> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/22> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/23> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/23> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/26> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/26> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/27> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/27> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/28> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/28> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/29> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/29> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/3> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/3> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/30> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/30> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/31> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/31> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/4> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/4> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/5> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/5> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/6> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/6> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/7> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/7> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/8> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/8> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/9> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:16:24.364359"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/9> ;
        ns2:hasDataReference "City" .
}

<places-organizations-over-time.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION1TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE CITATION1 IS NOT NULL AND NOT REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION1" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION1}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION1URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION1" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION2TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE CITATION2 IS NOT NULL AND NOT REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION2" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION2}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION2URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION2" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION3TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE CITATION3 IS NOT NULL AND NOT REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION3" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION3}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#CITATION3URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION3" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#SOURCE> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT
			D.ID,
			CONCAT(D.SOURCE, ', pp. ' || E.PAGENUMBERS) AS REFERENCE
		FROM DATA D 
		LEFT OUTER JOIN 
		(
			WITH RECURSIVE SPLITTEDPAGENUMBERS (ID, PAGENUMBERS, REST) AS 
			( 
				SELECT ID, NULL, PAGENUMBERS || ';' FROM  (SELECT ID, PAGENUMBERS FROM DATA WHERE PAGENUMBERS IS NOT NULL) 
				UNION ALL 
				SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM SPLITTEDPAGENUMBERS WHERE REST <> '' 
			) SELECT DISTINCT ID, PAGENUMBERS FROM SPLITTEDPAGENUMBERS WHERE PAGENUMBERS IS NOT NULL
		) E ON D.ID = E.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "REFERENCE" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{REFERENCE}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#OrganisationAppellation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, COUNTRY, ORGANISATION FROM DATA" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "{ORGANISATION}" ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate rdfs:label ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E41_Appellation> ;
                ns1:template "https://kb.beyond2022.ie/organisation-appellation/{COUNTRY}/{ORGANISATION}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#PlaceAppellation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, COUNTRY, PLACE FROM DATA" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "{PLACE}" ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate rdfs:label ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E41_Appellation> ;
                ns1:template "https://kb.beyond2022.ie/place-appellation/{COUNTRY}/{PLACE}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#timespan> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT 
			*,
			COALESCE(DATEFROM, 'UNKNOWN') AS DATEFROM_FOR_URI,
			COALESCE(DATETO, 'UNKNOWN') AS DATETO_FOR_URI,
		FROM DATA""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "DATEFROM" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81a_end_of_the_begin>,
                    <http://erlangen-crm.org/current/P82a_begin_of_the_begin> ],
            [ ns1:objectMap [ ns1:column "DATETO" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81b_begin_of_the_end>,
                    <http://erlangen-crm.org/current/P82b_end_of_the_end> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E52_Time-Span> ;
                ns1:template "https://kb.beyond2022.ie/time-span/{DATEFROM_FOR_URI}_{DATETO_FOR_URI}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Location> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT 
			ID, 
			COUNTRY, 
			PLACE,
			ORGANISATION,
			COALESCE(DATEFROM, 'UNKNOWN') AS DATEFROM,
			COALESCE(DATETO, 'UNKNOWN') AS DATETO,
			COMMENT
		FROM DATA""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Location> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> ],
                    [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#timespan> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P4_has_time-span> ],
            [ ns1:objectMap [ ns1:column "COMMENT" ;
                        ns1:datatype xsd:string ] ;
                ns1:predicate <http://erlangen-crm.org/current/P3_has_note> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/location/{COUNTRY}/{ORGANISATION}-{PLACE}-{DATEFROM}-{DATETO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Organisation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, ORGANISATION, COUNTRY, COMMENT FROM DATA" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Organisation> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#OrganisationAppellation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P1_is_identified_by> ],
            [ ns1:objectMap [ ns1:column "COMMENT" ;
                        ns1:datatype xsd:string ] ;
                ns1:predicate <http://erlangen-crm.org/current/P3_has_note> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E74_Group> ;
                ns1:template "https://kb.beyond2022.ie/organisation/{COUNTRY}/{ORGANISATION}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#Place> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, COUNTRY, PLACE, COMMENT FROM DATA" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/places-organizations-over-time.ttl#PlaceAppellation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P1_is_identified_by> ],
            [ ns1:objectMap [ ns1:column "COMMENT" ;
                        ns1:datatype xsd:string ] ;
                ns1:predicate <http://erlangen-crm.org/current/P3_has_note> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E53_Place> ;
                ns1:template "https://kb.beyond2022.ie/place/{COUNTRY}/{PLACE}" ] .
}

<sample_mapping15.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/sample_mapping15.ttl#TriplesMap8> ns1:logicalTable [ ns1:tableName "student-v3.csv" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ;
                        ns1:datatype xsd:sss ] ;
                ns1:predicate <http://www.w3.org/ns/prov#generatedAtTime> ] ;
        ns1:subjectMap [ ns1:class <https://www.w3id.org/MQIO/#MappingDocument> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .
}

<eis--vocab--daq_typeparsed8.ttl> {
    <http://purl.org/eis/vocab/daq#Category> a rdfs:Class,
            ns7:Class ;
        rdfs:label "Category"@en ;
        rdfs:comment "The highest level of quality metric is a category. A category groups a number of dimensions relevant to each other which aims at measuring the quality of a dataset from different aspects. Categories are provided as subclasses of this abstract class, which is not intended for direct usage."@en ;
        ns7:equivalentClass <http://www.w3.org/ns/dqv#Category> .

    <http://purl.org/eis/vocab/daq#Dimension> a rdfs:Class,
            ns7:Class ;
        rdfs:label "Dimension"@en ;
        rdfs:comment "Each dimension is part of a larger group called category (See daq:Category). Each dimension has a number of metrics which are associated to it. A dimension is linked with a category using the daq:hasDimension property. Dimensions are provided as subclasses of this abstract class, which is not intended for direct usage."@en ;
        ns7:equivalentClass <http://www.w3.org/ns/dqv#Dimension> .

    <http://purl.org/eis/vocab/daq#Metric> a rdfs:Class,
            ns7:Class ;
        rdfs:label "Metric"@en ;
        rdfs:comment "The smallest unit of measuring a quality dimension is a metric. A metric belongs to exactly one dimension. Each metric has one or more observations (daq:hasObservation), which records data quality assessment value following a computation. Metrics are provided as subclasses of this abstract class, which is not intended for direct usage."@en ;
        rdfs:subClassOf [ a ns7:Restriction ;
                ns7:minCardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#hasObservation> ],
            [ a ns7:Restriction ;
                ns7:cardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#expectedDataType> ] ;
        ns7:equivalentClass <http://www.w3.org/ns/dqv#Metric> .

    <http://purl.org/eis/vocab/daq#Observation> a rdfs:Class,
            ns7:Class ;
        rdfs:label "Quality Observation"@en ;
        rdfs:comment "A quality observation represents the statistical and provenance information of the attached metric's assessment activity."@en ;
        rdfs:subClassOf [ a ns7:Restriction ;
                ns7:minCardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#metric> ],
            [ a ns7:Restriction ;
                ns7:cardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#value> ],
            [ a ns7:Restriction ;
                ns7:cardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/linked-data/sdmx/2009/dimension#timePeriod> ],
            [ a ns7:Restriction ;
                ns7:cardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#computedOn> ],
            [ a ns7:Restriction ;
                ns7:cardinality "1"^^xsd:nonNegativeInteger ;
                ns7:onProperty <http://purl.org/eis/vocab/daq#isEstimate> ],
            ns6:Observation,
            <http://www.w3.org/ns/prov#Entity> ;
        ns7:equivalentClass <http://www.w3.org/ns/dqv#QualityMeasurement> .

    <http://purl.org/eis/vocab/daq#QualityGraph> a rdfs:Class,
            ns7:Class ;
        rdfs:label "Quality Graph Statistics"@en ;
        rdfs:comment "Defines a quality graph which will contain all metadata about quality metrics on the dataset."@en ;
        rdfs:subClassOf [ a ns7:Restriction ;
                ns7:hasValue <http://purl.org/eis/vocab/daq#dsd> ;
                ns7:onProperty ns6:structure ],
            ns6:DataSet,
            <http://www.w3.org/2004/03/trix/rdfg-1/Graph> ;
        ns7:equivalentClass <http://www.w3.org/ns/dqv#QualityMeasurementDataset> .

    <http://purl.org/eis/vocab/daq#computedBy> a ns7:DeprecatedProperty ;
        rdfs:label "computed by"@en ;
        rdfs:comment "**Deprecated Property**. The computedBy property defines the Agent that computed a metric on a dataset."@en ;
        rdfs:domain ns6:Observation .

    <http://purl.org/eis/vocab/daq#requires> a rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "requires"@en ;
        rdfs:comment "A metric might require a number of external resources (e.g. a gold standard) in order to be able to measure the quality. In order to cater for the most generic requirement, this property links a metric to the required resource (e.g. a URI to the gold standard dataset used)."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Metric> ;
        rdfs:range rdfs:Resource .

    <http://purl.org/eis/vocab/daq#> a <http://purl.org/vocommons/voaf#Vocabulary>,
            ns7:Ontology ;
        ns9:description "The Dataset Quality Vocabulary (daQ) is a lightweight, extensible core vocabulary for attaching the result of quality benchmarking of a linked open dataset (usually an expensive process) to that dataset.  daQ is designed to be extended by custom quality metrics.  Use cases include filtering and ranking datasets by quality."@en ;
        ns11:contributor [ rdfs:seeAlso <http://purl.org/net/clange> ;
                ns8:homepage <http://langec.wordpress.com/about/> ;
                ns8:name "Christoph Lange" ] ;
        ns11:creator [ ns8:mbox <mailto:debattij@scss.tcd.ie> ;
                ns8:name "Jeremy Debattista" ] ;
        ns11:language "en"^^xsd:language ;
        ns11:modified "2017-08-03"^^xsd:date ;
        ns11:title "Dataset Quality Vocabulary (daQ)"@en ;
        ns10:preferredNamespacePrefix "daq" ;
        ns10:preferredNamespaceUri "http://purl.org/eis/vocab/daq#" ;
        ns8:homepage <http://purl.org/eis/vocab/daq#> .

    <http://purl.org/eis/vocab/daq#dsd> a ns6:DataStructureDefinition ;
        ns6:component [ ns6:dimension <http://purl.org/eis/vocab/daq#metric> ;
                ns6:order 1 ],
            [ ns6:dimension <http://purl.org/eis/vocab/daq#computedOn> ;
                ns6:order 2 ],
            [ ns6:dimension <http://purl.org/linked-data/sdmx/2009/dimension#timePeriod> ;
                ns6:order 3 ],
            [ ns6:measure <http://purl.org/eis/vocab/daq#value> ] .

    <http://purl.org/eis/vocab/daq#expectedDataType> a rdf:Property,
            ns7:DatatypeProperty ;
        rdfs:label "expected data type"@en ;
        rdfs:comment "Each metric should have an expect data type for it's observed value (e.g. xsd:boolean, xsd:double etc...)"@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Metric> ;
        rdfs:range xsd:anySimpleType ;
        ns7:equivalentProperty <http://www.w3.org/ns/dqv#expectedDataType> .

    <http://purl.org/eis/vocab/daq#hasDimension> a rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "hasDimension"@en ;
        rdfs:comment "The category concept classifies dimensions related to the measurement of quality for a specific criteria. This is an abstract property and should not be used directly. Specific sub-properties should be inherited for different dimensions."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Category> ;
        rdfs:range <http://purl.org/eis/vocab/daq#Dimension> .

    <http://purl.org/eis/vocab/daq#hasMetric> a rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "hasMetric"@en ;
        rdfs:comment "A dimension is an abstract concept which groups an number of more concrete metrics to measure quality of a dataset. This is an abstract property and should not be used directly. Specific sub-properties should be inherited for different metrics."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Dimension> ;
        rdfs:range <http://purl.org/eis/vocab/daq#Metric> .

    <http://purl.org/eis/vocab/daq#isEstimate> a rdf:Property,
            ns7:DatatypeProperty ;
        rdfs:label "is estimate"@en ;
        rdfs:comment "This property flags true if an assessed observation of a metric gives an estimate result instead of a more accurate one."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Observation> ;
        rdfs:range xsd:boolean .

    <http://purl.org/eis/vocab/daq#hasObservation> a rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "has observation"@en ;
        rdfs:comment "Computed metrics can have 1 or more quality observations, where each computed resource has one observation."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Metric> ;
        rdfs:range <http://purl.org/eis/vocab/daq#Observation> ;
        ns7:inverseOf <http://purl.org/eis/vocab/daq#metric> .

    <http://purl.org/eis/vocab/daq#value> a ns6:MeasureProperty,
            rdf:Property,
            ns7:DatatypeProperty ;
        rdfs:label "value"@en ;
        rdfs:comment "Each metric will have a value computed. In order to deal with the different return type of the metric computation, this property links a metric with a value object (e.g. boolean, double, Literal)."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Observation> ;
        ns7:equivalentProperty <http://www.w3.org/ns/dqv#value> .

    <http://purl.org/linked-data/sdmx/2009/dimension#timePeriod> a ns6:DimensionProperty ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Observation> ;
        rdfs:range xsd:dateTime .

    <http://purl.org/eis/vocab/daq#computedOn> a ns6:DimensionProperty,
            rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "computed on"@en ;
        rdfs:comment "Quality metrics can be (in principle) calculated on various forms of data (such as datasets, graphs, set of triples etc...). This vocabulary allow the owner/user of such RDF data to calculate metrics on multiple (and different) resources."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Observation> ;
        rdfs:range rdfs:Resource ;
        ns7:equivalentProperty <http://www.w3.org/ns/dqv#computedOn> .

    <http://purl.org/eis/vocab/daq#metric> a ns6:DimensionProperty,
            rdf:Property,
            ns7:ObjectProperty ;
        rdfs:label "metric"@en ;
        rdfs:comment "Represents the metric being observed."@en ;
        rdfs:domain <http://purl.org/eis/vocab/daq#Observation> ;
        rdfs:range <http://purl.org/eis/vocab/daq#Metric> ;
        ns7:equivalentProperty <http://www.w3.org/ns/dqv#isMeasurementOf> ;
        ns7:inverseOf <http://purl.org/eis/vocab/daq#hasObservation> .

    [] ns7:equivalentProperty <http://www.w3.org/ns/dqv#hasQualityMeasurement> ;
        ns7:inverseOf <http://purl.org/eis/vocab/daq#computedOn> .

    [] ns7:equivalentProperty <http://www.w3.org/ns/dqv#inCategory> ;
        ns7:inverseOf <http://purl.org/eis/vocab/daq#hasDimension> .

    [] ns7:equivalentProperty <http://www.w3.org/ns/dqv#inDimension> ;
        ns7:inverseOf <http://purl.org/eis/vocab/daq#hasMetric> .
}

<organizations.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#AccountsTo> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.NAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.ACCOUNTSTO, '^http(s)?://'), D.ACCOUNTSTO, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.ACCOUNTSTO, '^http(s)?://'), NULL, D.ACCOUNTSTO) AS TOID,
		COALESCE(T.NAME, D.ACCOUNTSTO) AS TONAME
	FROM
		(
			WITH recursive splittedaccountsto (id, ACCOUNTSTO, rest) AS 
			( 
				SELECT id, NULL, ACCOUNTSTO || ';' FROM  (SELECT id, ACCOUNTSTO FROM data WHERE ACCOUNTSTO IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM splittedaccountsto WHERE rest <> '' 
			)
			SELECT DISTINCT id, ACCOUNTSTO FROM splittedaccountsto WHERE ACCOUNTSTO IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.ACCOUNTSTO = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Accountability> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#subjects> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#reports_to> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/accounts-to/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION1TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE CITATION1 IS NOT NULL AND NOT REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION1" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION1}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION1URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION1" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION2TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE CITATION2 IS NOT NULL AND NOT REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION2" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION2}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION2URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION2" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION3TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE CITATION3 IS NOT NULL AND NOT REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION3" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION3}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#CITATION3URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION3" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#ENDDATEEVENT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, COUNTRY, NAME FROM DATA WHERE ENDDATELOWER IS NOT NULL;" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#ENDDATETIMESPAN> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P4_has_time-span> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P93_took_out_of_existence> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E64_End_of_Existence> ;
                ns1:template "https://kb.beyond2022.ie/end-of-organisation/{COUNTRY}/{NAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#PartOf> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.NAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.PARTOF, '^http(s)?://'), D.PARTOF, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.PARTOF, '^http(s)?://'), NULL, D.PARTOF) AS TOID,
		COALESCE(T.NAME, D.PARTOF) AS TONAME
	FROM
		(
			WITH recursive splittedpartof (id, PARTOF, rest) AS 
			( 
				SELECT id, NULL, PARTOF || ';' FROM  (SELECT id, PARTOF FROM data WHERE PARTOF IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM splittedpartof WHERE rest <> '' 
			)
			SELECT DISTINCT id, PARTOF FROM splittedpartof WHERE PARTOF IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.PARTOF = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Composition> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#part_of> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#composed_of> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/part-of/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#SOURCE> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT
			D.ID,
			CONCAT(D.SOURCE, ', pp. ' || E.PAGENUMBERS) AS REFERENCE
		FROM DATA D 
		LEFT OUTER JOIN 
		(
			WITH RECURSIVE SPLITTEDPAGENUMBERS (ID, PAGENUMBERS, REST) AS 
			( 
				SELECT ID, NULL, PAGENUMBERS || ';' FROM  (SELECT ID, PAGENUMBERS FROM DATA WHERE PAGENUMBERS IS NOT NULL) 
				UNION ALL 
				SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM SPLITTEDPAGENUMBERS WHERE REST <> '' 
			) SELECT DISTINCT ID, PAGENUMBERS FROM SPLITTEDPAGENUMBERS WHERE PAGENUMBERS IS NOT NULL
		) E ON D.ID = E.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "REFERENCE" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{REFERENCE}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#STARTDATEEVENT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, NAME, COUNTRY FROM DATA WHERE STARTDATELOWER IS NOT NULL;" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#STARTDATETIMESPAN> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P4_has_time-span> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P92_brought_into_existence> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E63_Beginning_of_Existence> ;
                ns1:template "https://kb.beyond2022.ie/start-of-organisation/{COUNTRY}/{NAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#appealsto> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.NAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.APPEALSTO, '^http(s)?://'), D.APPEALSTO, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.APPEALSTO, '^http(s)?://'), NULL, D.APPEALSTO) AS TOID,
		COALESCE(T.NAME, D.APPEALSTO) AS TONAME
	FROM
		(
			WITH recursive APPEALSTOSPLITTED (id, APPEALSTO, rest) AS 
			( 
				SELECT id, NULL, APPEALSTO || ';' FROM  (SELECT id, APPEALSTO FROM data WHERE APPEALSTO IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM APPEALSTOSPLITTED WHERE rest <> '' 
			)
			SELECT DISTINCT id, APPEALSTO FROM APPEALSTOSPLITTED WHERE APPEALSTO IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.APPEALSTO = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Appeal> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#appealer> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#appealee> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/appeals-to/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#succeeds> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.NAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.SUCCEEDS, '^http(s)?://'), D.SUCCEEDS, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.SUCCEEDS, '^http(s)?://'), NULL, D.SUCCEEDS) AS TOID,
		COALESCE(T.NAME, D.SUCCEEDS) AS TONAME
	FROM
		(
			WITH recursive SUCCEEDSSPLITTED (id, SUCCEEDS, rest) AS 
			( 
				SELECT id, NULL, SUCCEEDS || ';' FROM  (SELECT id, SUCCEEDS FROM data WHERE SUCCEEDS IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM SUCCEEDSSPLITTED WHERE rest <> '' 
			)
			SELECT DISTINCT id, SUCCEEDS FROM SUCCEEDSSPLITTED WHERE SUCCEEDS IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.SUCCEEDS = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Succession> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#successor> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#predecessor> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/succeeds/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Appellation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT X.ID, X.LABEL, Y.COUNTRY 
		FROM (
			SELECT ID, NAME AS LABEL FROM DATA WHERE NAME IS NOT NULL 
			UNION 
			WITH RECURSIVE SYNONYMSSPLITTED(ID, SYNONYMS, REST) AS (
				SELECT ID, NULL, SYNONYMS || ';'
				FROM (SELECT ID, SYNONYMS FROM DATA) WHERE SYNONYMS IS NOT NULL
	  			UNION ALL
	  		  	SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM SYNONYMSSPLITTED WHERE REST <> ''
			) SELECT ID, SYNONYMS AS LABEL FROM SYNONYMSSPLITTED WHERE SYNONYMS IS NOT NULL
		) X INNER JOIN DATA Y ON X.ID = Y.ID 
		""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "{LABEL}" ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate rdfs:label ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E41_Appellation>,
                    <http://erlangen-crm.org/current/E81_Actor_Appellation> ;
                ns1:template "https://kb.beyond2022.ie/organisation-appellation/{COUNTRY}/{LABEL}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#ENDDATETIMESPAN> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, ENDDATELOWER, ENDDATEUPPER FROM DATA WHERE ENDDATELOWER IS NOT NULL;" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENDDATELOWER" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81a_end_of_the_begin>,
                    <http://erlangen-crm.org/current/P82a_begin_of_the_begin> ],
            [ ns1:objectMap [ ns1:column "ENDDATEUPPER" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81b_begin_of_the_end>,
                    <http://erlangen-crm.org/current/P82b_end_of_the_end> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E52_Time-Span> ;
                ns1:template "https://kb.beyond2022.ie/time-span/{ENDDATELOWER}_{ENDDATEUPPER}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#STARTDATETIMESPAN> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, STARTDATELOWER, STARTDATEUPPER FROM DATA WHERE STARTDATELOWER IS NOT NULL;" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "STARTDATELOWER" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81a_end_of_the_begin>,
                    <http://erlangen-crm.org/current/P82a_begin_of_the_begin> ],
            [ ns1:objectMap [ ns1:column "STARTDATEUPPER" ;
                        ns1:datatype xsd:date ] ;
                ns1:predicate <http://erlangen-crm.org/current/P81b_begin_of_the_end>,
                    <http://erlangen-crm.org/current/P82b_end_of_the_end> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E52_Time-Span> ;
                ns1:template "https://kb.beyond2022.ie/time-span/{STARTDATELOWER}_{STARTDATEUPPER}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Organisation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		D.ID,
		D.NAME,
		D.COUNTRY,
		D.COMMENT,
		X.ORGANISATIONTYPE
	FROM
		DATA D
		LEFT OUTER JOIN (
			WITH RECURSIVE ORGANISATIONTYPESPLITTED(ID, ORGANISATIONTYPE, REST) AS (
				SELECT ID, NULL, ORGANISATIONTYPE || ';'
				FROM (SELECT ID, ORGANISATIONTYPE FROM DATA) WHERE ORGANISATIONTYPE IS NOT NULL
				UNION ALL
				SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM ORGANISATIONTYPESPLITTED WHERE REST <> ''
			) SELECT ID, ORGANISATIONTYPE FROM ORGANISATIONTYPESPLITTED WHERE ORGANISATIONTYPE IS NOT NULL
		) X ON D.ID = X.ID

	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Organisation> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/organizations.ttl#Appellation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P1_is_identified_by> ],
            [ ns1:objectMap [ ns1:column "COMMENT" ;
                        ns1:datatype xsd:string ] ;
                ns1:predicate <http://erlangen-crm.org/current/P3_has_note> ],
            [ ns1:objectMap [ ns1:template "https://ont.beyond2022.ie/ontology#{ORGANISATIONTYPE}" ] ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E74_Group> ;
                ns1:template "https://kb.beyond2022.ie/organisation/{COUNTRY}/{NAME}" ] .
}

<2.trig> {
    <http://www.example.com/changeLog/user-1> a ns2:ChangeLog ;
        ns2:hasChange <http://www.example.com/deleteChange/24>,
            <http://www.example.com/deleteChange/25>,
            <http://www.example.com/deleteChange/32>,
            <http://www.example.com/deleteChange/33>,
            <http://www.example.com/insertChange/0>,
            <http://www.example.com/insertChange/1>,
            <http://www.example.com/insertChange/10>,
            <http://www.example.com/insertChange/11>,
            <http://www.example.com/insertChange/12>,
            <http://www.example.com/insertChange/13>,
            <http://www.example.com/insertChange/14>,
            <http://www.example.com/insertChange/15>,
            <http://www.example.com/insertChange/16>,
            <http://www.example.com/insertChange/17>,
            <http://www.example.com/insertChange/18>,
            <http://www.example.com/insertChange/19>,
            <http://www.example.com/insertChange/2>,
            <http://www.example.com/insertChange/20>,
            <http://www.example.com/insertChange/21>,
            <http://www.example.com/insertChange/22>,
            <http://www.example.com/insertChange/23>,
            <http://www.example.com/insertChange/26>,
            <http://www.example.com/insertChange/27>,
            <http://www.example.com/insertChange/28>,
            <http://www.example.com/insertChange/29>,
            <http://www.example.com/insertChange/3>,
            <http://www.example.com/insertChange/30>,
            <http://www.example.com/insertChange/31>,
            <http://www.example.com/insertChange/4>,
            <http://www.example.com/insertChange/5>,
            <http://www.example.com/insertChange/6>,
            <http://www.example.com/insertChange/7>,
            <http://www.example.com/insertChange/8>,
            <http://www.example.com/insertChange/9> ;
        ns2:hasCurrentVersion <https://raw.githubusercontent.com/alex-randles/Change-Detection-System-Examples/main/manipulated_file/student-v3.csv> ;
        ns2:hasPreviousVersion <https://raw.githubusercontent.com/kg-construct/rml-test-cases/master/test-cases/RMLTC0002a-CSV/student.csv> .

    <http://www.example.com/changedData/0> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/1> a ns2:ChangedData ;
        rdfs:comment "Williams" .

    <http://www.example.com/changedData/10> a ns2:ChangedData ;
        rdfs:comment "ddd" .

    <http://www.example.com/changedData/11> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/12> a ns2:ChangedData ;
        rdfs:comment "Michael" .

    <http://www.example.com/changedData/13> a ns2:ChangedData ;
        rdfs:comment "Jordan" .

    <http://www.example.com/changedData/14> a ns2:ChangedData ;
        rdfs:comment "Basketball" .

    <http://www.example.com/changedData/15> a ns2:ChangedData ;
        rdfs:comment "Brooklyn" .

    <http://www.example.com/changedData/16> a ns2:ChangedData ;
        rdfs:comment "xxx" .

    <http://www.example.com/changedData/17> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/18> a ns2:ChangedData ;
        rdfs:comment "Tom" .

    <http://www.example.com/changedData/19> a ns2:ChangedData ;
        rdfs:comment "Brady" .

    <http://www.example.com/changedData/2> a ns2:ChangedData ;
        rdfs:comment "Tennis" .

    <http://www.example.com/changedData/20> a ns2:ChangedData ;
        rdfs:comment "Football" .

    <http://www.example.com/changedData/21> a ns2:ChangedData ;
        rdfs:comment "San Mateo" .

    <http://www.example.com/changedData/22> a ns2:ChangedData ;
        rdfs:comment "fff" .

    <http://www.example.com/changedData/23> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/24> a ns2:ChangedData ;
        rdfs:comment "10" .

    <http://www.example.com/changedData/25> a ns2:ChangedData ;
        rdfs:comment "Venus" .

    <http://www.example.com/changedData/26> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/27> a ns2:ChangedData ;
        rdfs:comment "Test" .

    <http://www.example.com/changedData/28> a ns2:ChangedData ;
        rdfs:comment "Sport" .

    <http://www.example.com/changedData/29> a ns2:ChangedData ;
        rdfs:comment "City" .

    <http://www.example.com/changedData/3> a ns2:ChangedData ;
        rdfs:comment "California" .

    <http://www.example.com/changedData/30> a ns2:ChangedData ;
        rdfs:comment "LastName" .

    <http://www.example.com/changedData/31> a ns2:ChangedData ;
        rdfs:comment "FirstName" .

    <http://www.example.com/changedData/32> a ns2:ChangedData ;
        rdfs:comment "Name" .

    <http://www.example.com/changedData/33> a ns2:ChangedData ;
        rdfs:comment "ID" .

    <http://www.example.com/changedData/4> a ns2:ChangedData ;
        rdfs:comment "Tests" .

    <http://www.example.com/changedData/5> a ns2:ChangedData ;
        rdfs:comment "TT" .

    <http://www.example.com/changedData/6> a ns2:ChangedData ;
        rdfs:comment "Cristiano" .

    <http://www.example.com/changedData/7> a ns2:ChangedData ;
        rdfs:comment "Ronaldo" .

    <http://www.example.com/changedData/8> a ns2:ChangedData ;
        rdfs:comment "Soccer" .

    <http://www.example.com/changedData/9> a ns2:ChangedData ;
        rdfs:comment "Funchal" .

    <http://www.example.com/deleteChange/24> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/24> ;
        ns2:hasDataReference "ID" .

    <http://www.example.com/deleteChange/25> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/25> ;
        ns2:hasDataReference "Name" .

    <http://www.example.com/deleteChange/32> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/32> .

    <http://www.example.com/deleteChange/33> a ns2:DeleteSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/33> .

    <http://www.example.com/insertChange/0> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/0> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/1> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/1> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/10> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/10> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/11> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/11> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/12> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/12> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/13> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/13> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/14> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/14> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/15> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/15> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/16> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/16> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/17> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/17> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/18> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/18> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/19> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/19> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/2> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/2> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/20> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/20> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/21> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/21> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/22> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/22> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/23> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/23> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/26> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/26> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/27> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/27> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/28> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/28> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/29> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/29> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/3> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/3> ;
        ns2:hasDataReference "City" .

    <http://www.example.com/insertChange/30> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/30> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/31> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/31> ;
        ns2:hasStructuralReference "Columns" .

    <http://www.example.com/insertChange/4> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/4> ;
        ns2:hasDataReference "Test" .

    <http://www.example.com/insertChange/5> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/5> ;
        ns2:hasDataReference "TT" .

    <http://www.example.com/insertChange/6> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/6> ;
        ns2:hasDataReference "FirstName" .

    <http://www.example.com/insertChange/7> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/7> ;
        ns2:hasDataReference "LastName" .

    <http://www.example.com/insertChange/8> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/8> ;
        ns2:hasDataReference "Sport" .

    <http://www.example.com/insertChange/9> a ns2:InsertSourceData ;
        ns3:atTime "2023-04-04 13:13:54.495399"^^xsd:dateTimeStamp ;
        ns2:hasChangedData <http://www.example.com/changedData/9> ;
        ns2:hasDataReference "City" .
}

<offices.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION1TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE CITATION1 IS NOT NULL AND NOT REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION1" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION1}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION1URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION1 FROM DATA WHERE REGEXP_LIKE(CITATION1, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION1" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION2TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE CITATION2 IS NOT NULL AND NOT REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION2" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION2}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION2URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION2 FROM DATA WHERE REGEXP_LIKE(CITATION2, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION2" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION3TEXT> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE CITATION3 IS NOT NULL AND NOT REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "CITATION3" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{CITATION3}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#CITATION3URI> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery "SELECT ID, CITATION3 FROM DATA WHERE REGEXP_LIKE(CITATION3, '^http(s)?://')" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:column "CITATION3" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#COUNCILS> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.OFFICENAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.COUNSELS, '^http(s)?://'), D.COUNSELS, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.COUNSELS, '^http(s)?://'), NULL, D.COUNSELS) AS TOID,
		COALESCE(T.OFFICENAME, D.COUNSELS) AS TONAME
	FROM
		(
			WITH recursive splittedcounsels (id, counsels, rest) AS 
			( 
				SELECT id, NULL, counsels || ';' FROM  (SELECT id, counsels FROM data WHERE counsels IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM splittedcounsels WHERE rest <> '' 
			)
			SELECT DISTINCT id, counsels FROM splittedcounsels WHERE counsels IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.COUNSELS = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Council> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#counselor> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#counsellee> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/counsels/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#OFFICEOVERSEENBYORGANISATION> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		D.ID,
		D.OVERSEENBY,
		F.OFFICENAME,
		F.COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.OVERSEENBY, '^http(s)?://'), D.OVERSEENBY, NULL) AS OVERSEENBY_URI,
		CASEWHEN(REGEXP_LIKE(D.OVERSEENBY, '^http(s)?://'), NULL, D.OVERSEENBY) AS OVERSEENBY_LABEL
	FROM
		(
			WITH RECURSIVE splittedoverseen (id, OVERSEENBY, rest) AS 
			( 
				SELECT id, NULL, OVERSEENBY || ';' FROM  (SELECT id, OVERSEENBY FROM data WHERE OVERSEENBY IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM splittedoverseen WHERE rest <> '' 
			)
			SELECT DISTINCT id, OVERSEENBY FROM splittedoverseen WHERE OVERSEENBY IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Supervision> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:template "https://kb.beyond2022.ie/office/{COUNTRY}/{OVERSEENBY_LABEL}" ],
                    [ ns1:column "OVERSEENBY_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#subject> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#object> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/supervision/{COUNTRY}/{OFFICENAME}-{OVERSEENBY}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#ORGANISATIONOFOFFICE> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		D.ID,
		D.ORGANISATION,
		F.OFFICENAME,
		F.COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.ORGANISATION, '^http(s)?://'), D.ORGANISATION, NULL) AS ORGANISATION_URI,
		CASEWHEN(REGEXP_LIKE(D.ORGANISATION, '^http(s)?://'), NULL, D.ORGANISATION) AS ORGANISATION_LABEL
	FROM
		(
			WITH RECURSIVE SPLITTEDORGANISATIONS (id, ORGANISATION, rest) AS 
			( 
				SELECT id, NULL, ORGANISATION || ';' FROM  (SELECT id, ORGANISATION FROM data WHERE ORGANISATION IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM SPLITTEDORGANISATIONS WHERE rest <> '' 
			)
			SELECT DISTINCT id, ORGANISATION FROM SPLITTEDORGANISATIONS WHERE ORGANISATION IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Governance> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:template "https://kb.beyond2022.ie/organisation/{COUNTRY}/{ORGANISATION_LABEL}" ],
                    [ ns1:column "ORGANISATION_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#subject> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#object> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/falls-under/{COUNTRY}/{OFFICENAME}-{ORGANISATION}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#PLACEOFORGANISATION> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		D.ID,
		D.PLACE,
		F.OFFICENAME,
		F.COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.PLACE, '^http(s)?://'), D.PLACE, NULL) AS PLACE_URI,
		CASEWHEN(REGEXP_LIKE(D.PLACE, '^http(s)?://'), NULL, D.PLACE) AS PLACE_LABEL
	FROM
		(
			WITH RECURSIVE placenamesplitted (id, PLACE, rest) AS 
			( 
				SELECT id, NULL, PLACE || ';' FROM  (SELECT id, PLACE FROM data WHERE PLACE IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM placenamesplitted WHERE rest <> '' 
			)
			SELECT DISTINCT id, PLACE FROM placenamesplitted WHERE PLACE IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Location> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:template "https://kb.beyond2022.ie/place/{COUNTRY}/{PLACE_LABEL}" ],
                    [ ns1:column "PLACE_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#subject> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#object> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/location/{COUNTRY}/{OFFICENAME}-{PLACE}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#SOURCE> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT
			D.ID,
			CONCAT(D.SOURCE, ', pp. ' || E.PAGENUMBERS) AS REFERENCE
		FROM DATA D 
		LEFT OUTER JOIN 
		(
			WITH RECURSIVE SPLITTEDPAGENUMBERS (ID, PAGENUMBERS, REST) AS 
			( 
				SELECT ID, NULL, PAGENUMBERS || ';' FROM  (SELECT ID, PAGENUMBERS FROM DATA WHERE PAGENUMBERS IS NOT NULL) 
				UNION ALL 
				SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM SPLITTEDPAGENUMBERS WHERE REST <> '' 
			) SELECT DISTINCT ID, PAGENUMBERS FROM SPLITTEDPAGENUMBERS WHERE PAGENUMBERS IS NOT NULL
		) E ON D.ID = E.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "REFERENCE" ] ;
                ns1:predicate rdfs:label ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P71_lists> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E32_Authority_Document> ;
                ns1:template "https://kb.beyond2022.ie/reference/{REFERENCE}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#SubjectTo> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		F.ID AS FROMID,
		F.OFFICENAME AS FROMNAME,
		F.COUNTRY AS COUNTRY,
		CASEWHEN(REGEXP_LIKE(D.SUBJECTTO, '^http(s)?://'), D.SUBJECTTO, NULL) AS TO_URI,
		CASEWHEN(REGEXP_LIKE(D.SUBJECTTO, '^http(s)?://'), NULL, D.SUBJECTTO) AS TOID,
		COALESCE(T.OFFICENAME, D.SUBJECTTO) AS TONAME
	FROM
		(
			WITH recursive splittedsubject (id, subjectto, rest) AS 
			( 
				SELECT id, NULL, subjectto || ';' FROM  (SELECT id, subjectto FROM data WHERE subjectto IS NOT NULL) 
				UNION ALL 
				SELECT id, trim(substr(rest, 0, instr(rest, ';') - 1)), substr(rest, instr(rest, ';') + 1) FROM splittedsubject WHERE rest <> '' 
			)
			SELECT DISTINCT id, subjectto FROM splittedsubject WHERE subjectto IS NOT NULL
		) AS D
		JOIN DATA F ON D.ID = F.ID
		LEFT OUTER JOIN DATA T ON D.SUBJECTTO = T.ID
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Authority> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "FROMID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#subjects> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "TOID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> ],
                    [ ns1:column "TO_URI" ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://erlangen-crm.org/current/P67_refers_to>,
                    <https://ont.beyond2022.ie/ontology#represented_by> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E89_Propositional_Object> ;
                ns1:template "https://kb.beyond2022.ie/authority/{COUNTRY}/{FROMNAME}-{TONAME}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#OfficeAppellation> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
		SELECT X.ID, X.LABEL, Y.COUNTRY 
		FROM (
			SELECT ID, OFFICENAME AS LABEL FROM DATA WHERE OFFICENAME IS NOT NULL 
			UNION 
			WITH RECURSIVE SYNONYMSSPLITTED(ID, SYNONYMS, REST) AS (
				SELECT ID, NULL, SYNONYMS || ';'
				FROM (SELECT ID, SYNONYMS FROM DATA) WHERE SYNONYMS IS NOT NULL
	  			UNION ALL
	  		  	SELECT ID, TRIM(SUBSTR(REST, 0, INSTR(REST, ';') - 1)), SUBSTR(REST, INSTR(REST, ';') + 1) FROM SYNONYMSSPLITTED WHERE REST <> ''
			) SELECT ID, SYNONYMS AS LABEL FROM SYNONYMSSPLITTED WHERE SYNONYMS IS NOT NULL
		) X INNER JOIN DATA Y ON X.ID = Y.ID 
		""" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:template "{LABEL}" ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate rdfs:label ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E41_Appellation>,
                    <http://erlangen-crm.org/current/E81_Actor_Appellation> ;
                ns1:template "https://kb.beyond2022.ie/office-appellation/{COUNTRY}/{LABEL}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#Office> a ns1:TriplesMap ;
        ns1:logicalTable [ ns1:sqlQuery """
	SELECT 
		ID,
		OFFICENAME,
		COUNTRY,
		TYPE1,
		TYPE2,
		TYPE3,
		TYPE4,
		COMMENT
	FROM
		DATA;
	""" ] ;
        ns1:predicateObjectMap [ ns1:object <https://ont.beyond2022.ie/ontology#Office> ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:template "https://ont.beyond2022.ie/ontology#{TYPE1}" ],
                    [ ns1:template "https://ont.beyond2022.ie/ontology#{TYPE2}" ],
                    [ ns1:template "https://ont.beyond2022.ie/ontology#{TYPE3}" ],
                    [ ns1:template "https://ont.beyond2022.ie/ontology#{TYPE4}" ] ;
                ns1:predicate <http://erlangen-crm.org/current/P2_has_type> ],
            [ ns1:objectMap [ ns1:joinCondition [ ns1:child "ID" ;
                                ns1:parent "ID" ] ;
                        ns1:parentTriplesMap <file:///home/alex/MQI-Framework/static/uploads/offices.ttl#OfficeAppellation> ] ;
                ns1:predicate <http://erlangen-crm.org/current/P1_is_identified_by> ],
            [ ns1:objectMap [ ns1:column "COMMENT" ;
                        ns1:datatype xsd:string ] ;
                ns1:predicate <http://erlangen-crm.org/current/P3_has_note> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E74_Group> ;
                ns1:template "https://kb.beyond2022.ie/office/{COUNTRY}/{OFFICENAME}" ] .
}

<mapping.ttl> {
    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap1> ns1:logicalTable [ ns1:tableName "employee.csv" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ;
                        ns1:datatype xsd:dateTime ;
                        ns1:termType ns1:IRI ] ;
                ns1:predicate <http://www.w3.org/ns/prov#generatedAtTime> ] ;
        ns1:subjectMap [ ns1:class ns8:Employee ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap2> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ] ;
                ns1:predicate ns8:name ] ;
        ns1:subjectMap [ ns1:class ns8:Employee ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap3> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ] ;
                ns1:predicate <http://www.w3.org/ns/dqv#inCategory> ] ;
        ns1:subjectMap [ ns1:class <http://www.w3.org/ns/dqv#Dimension>,
                    ns8:Employee ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap4> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ;
                        ns1:datatype xsd:booleazn ;
                        ns1:termType ns1:Literal ] ;
                ns1:predicate <http://www.opengis.net/ont/geosparql#isSimples> ] ;
        ns1:subjectMap [ ns1:class <http://www.opengis.net/ont/geosparql#Geometry>,
                    ns8:Agent,
                    ns8:Document ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap5> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ] ;
                ns1:predicate <http://erlangen-crm.org/current/P113_removed> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E21_Persons> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap7> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ] ;
                ns1:predicate <http://erlangen-crm.org/current/P113_removed> ] ;
        ns1:subjectMap [ ns1:class <http://erlangen-crm.org/current/E21_Persons> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap8> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ;
                        ns1:datatype xsd:sss ] ;
                ns1:predicate <https://www.w3id.org/MQIO/#usedQuery> ] ;
        ns1:subjectMap [ ns1:class <https://www.w3id.org/MQIO/#MappingDocument> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .

    <file:///home/alex/MQI-Framework/static/uploads/mapping.ttl#TriplesMap99> ns1:logicalTable [ ns1:tableName "EMP" ] ;
        ns1:predicateObjectMap [ ns1:objectMap [ ns1:column "ENAME" ] ;
                ns1:predicate rdfs:label ] ;
        ns1:subjectMap [ ns1:class <http://www.w3id.org/FAIRVASC#Patients> ;
                ns1:template "http://data.example.com/employee/{EMPNO}" ] .
}

